services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER:PLAINTEXT,EXTERNAL:SSL
      KAFKA_ADVERTISED_LISTENERS: DOCKER://kafka:29092,EXTERNAL://${DOMAIN}:9092
      KAFKA_LISTENERS: DOCKER://:29092,EXTERNAL://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka.broker.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: f4security
      KAFKA_SSL_KEY_PASSWORD: f4security
      KAFKA_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/kafka.client.truststore.jks
      KAFKA_SSL_TRUSTSTORE_PASSWORD: f4security
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""

      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    volumes:
      - ./kafka/ssl:/etc/kafka/secrets
    depends_on:
      - zookeeper
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    environment:
      # cluster definition
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092
      - JVM_OPTS=-Xms256M -Xmx512M
    volumes:
      - ./secrets:/etc/kafka/secrets:ro
    depends_on:
      - kafka
  consul:
    image: docker.io/bitnami/consul:1.21.0
    ports:
      - 8300:8300
      - 8500:8500
      - 8600:8600
    command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO

  consul-config-loader:
    image: jhipster/consul-config-loader:v0.4.1
    volumes:
      - ./central-server-config:/config
    environment:
      - INIT_SLEEP_SECONDS=5
      - CONSUL_URL=consul
      - CONSUL_PORT=8500
  redis:
    image: redis:7.4.2 # Same version as prod
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${APP_F4_PASS}
  redisinsight:
    image: redis/redisinsight:latest
    container_name: redisinsight

    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${APP_F4_PASS}
    depends_on:
      - redis
  keycloak:
    image: quay.io/keycloak/keycloak:26.1.1
    command:
      - "start-dev"
      - "--import-realm"
      - "--proxy=edge"
      - "--hostname=https://keycloak.${DOMAIN}"
      - "--hostname-admin=https://keycloak.${DOMAIN}"
      - "--hostname-strict=true"
    volumes:
      - ./realm-config:/opt/keycloak/data/import
      - ./realm-config/keycloak-health-check.sh:/opt/keycloak/health-check.sh
    environment:
      - KC_DB=dev-file
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_FEATURES=scripts
      - KC_HTTP_PORT=9080
      - KC_HTTPS_PORT=9443
      - KC_HEALTH_ENABLED=true
      - KC_HTTP_MANAGEMENT_PORT=9990
      - KC_HOSTNAME_PORT=443
      - KC_FRONTEND_URL=https://keycloak.${DOMAIN}
      - KC_HOSTNAME_STRICT_HTTPS=true
      - KC_HTTP_ENABLED=true
    healthcheck:
      test: 'bash /opt/keycloak/health-check.sh'
      interval: 5s
      timeout: 5s
      retries: 50
      start_period: 10s

  prometheus:
    image: prom/prometheus:v3.3.1
    volumes:
      - ./prometheus-conf/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090

  alertmanager:
    image: prom/alertmanager:v0.28.1
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager-conf/:/etc/alertmanager/
    command:
      - "--config.file=/etc/alertmanager/config.yml"
      - "--storage.path=/alertmanager"

  grafana:
    image: grafana/grafana:12.0.0
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    environment:
      - ES_JAVA_OPTS=-Xms256m -Xmx256m
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200
    healthcheck:
      test:
        - CMD
        - curl
        - -f
        - http://localhost:9200/_cluster/health?wait_for_status=green&timeout=10s
      interval: 5s
      timeout: 10s
      retries: 10
  nginx:
    build: ./nginx/
    container_name: nginx
    restart: unless-stopped
    depends_on:
      keycloak:
        condition: service_healthy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/letsencrypt:/etc/letsencrypt
      - ./nginx/www:/var/www/html
      - ./nginx/log:/var/log/nginx
      - ./lua/validate_token.lua:/etc/nginx/validate_token.lua # Mount the Lua script
      - ./lua:/etc/nginx/lua
    command: [ "/usr/local/openresty/bin/openresty", "-g", "daemon off;" ]

volumes:
  prometheus_data: {}
  grafana_data: {}
